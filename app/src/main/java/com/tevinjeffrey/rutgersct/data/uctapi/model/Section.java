// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: model.proto at 48:1
package com.tevinjeffrey.rutgersct.data.uctapi.model;

import android.os.Parcelable;
import android.support.annotation.Nullable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.util.List;
import okio.ByteString;

public final class Section extends AndroidMessage<Section, Section.Builder> {
  public static final ProtoAdapter<Section> ADAPTER = new ProtoAdapter_Section();

  public static final Parcelable.Creator<Section> CREATOR = AndroidMessage.newCreator(ADAPTER);
  public static final Long DEFAULT_ID = 0L;
  public static final Long DEFAULT_COURSE_ID = 0L;
  public static final String DEFAULT_NUMBER = "";
  public static final String DEFAULT_CALL_NUMBER = "";
  public static final Long DEFAULT_MAX = 0L;
  public static final Long DEFAULT_NOW = 0L;
  public static final String DEFAULT_STATUS = "";
  public static final String DEFAULT_CREDITS = "";
  public static final String DEFAULT_TOPIC_NAME = "";
  public static final String DEFAULT_TOPIC_ID = "";
  private static final long serialVersionUID = 0L;
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long course_id;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String number;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String call_number;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long max;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long now;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String status;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String credits;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String topic_name;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String topic_id;

  @WireField(
      tag = 11,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Meeting#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Meeting> meetings;

  @WireField(
      tag = 12,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Instructor#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Instructor> instructors;

  @WireField(
      tag = 13,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Book#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Book> books;

  @WireField(
      tag = 14,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Metadata#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Metadata> metadata;

  public Section(
      @Nullable Long id,
      @Nullable Long course_id,
      @Nullable String number,
      @Nullable String call_number,
      @Nullable Long max,
      @Nullable Long now,
      @Nullable String status,
      @Nullable String credits,
      @Nullable String topic_name,
      @Nullable String topic_id,
      List<Meeting> meetings,
      List<Instructor> instructors,
      List<Book> books,
      List<Metadata> metadata) {
    this(
        id,
        course_id,
        number,
        call_number,
        max,
        now,
        status,
        credits,
        topic_name,
        topic_id,
        meetings,
        instructors,
        books,
        metadata,
        ByteString.EMPTY
    );
  }

  public Section(
      @Nullable Long id,
      @Nullable Long course_id,
      @Nullable String number,
      @Nullable String call_number,
      @Nullable Long max,
      @Nullable Long now,
      @Nullable String status,
      @Nullable String credits,
      @Nullable String topic_name,
      @Nullable String topic_id,
      List<Meeting> meetings,
      List<Instructor> instructors,
      List<Book> books,
      List<Metadata> metadata,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.course_id = course_id;
    this.number = number;
    this.call_number = call_number;
    this.max = max;
    this.now = now;
    this.status = status;
    this.credits = credits;
    this.topic_name = topic_name;
    this.topic_id = topic_id;
    this.meetings = Internal.immutableCopyOf("meetings", meetings);
    this.instructors = Internal.immutableCopyOf("instructors", instructors);
    this.books = Internal.immutableCopyOf("books", books);
    this.metadata = Internal.immutableCopyOf("metadata", metadata);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if (!(other instanceof Section)) {
      return false;
    }
    Section o = (Section) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(course_id, o.course_id)
        && Internal.equals(number, o.number)
        && Internal.equals(call_number, o.call_number)
        && Internal.equals(max, o.max)
        && Internal.equals(now, o.now)
        && Internal.equals(status, o.status)
        && Internal.equals(credits, o.credits)
        && Internal.equals(topic_name, o.topic_name)
        && Internal.equals(topic_id, o.topic_id)
        && meetings.equals(o.meetings)
        && instructors.equals(o.instructors)
        && books.equals(o.books)
        && metadata.equals(o.metadata);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (course_id != null ? course_id.hashCode() : 0);
      result = result * 37 + (number != null ? number.hashCode() : 0);
      result = result * 37 + (call_number != null ? call_number.hashCode() : 0);
      result = result * 37 + (max != null ? max.hashCode() : 0);
      result = result * 37 + (now != null ? now.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (credits != null ? credits.hashCode() : 0);
      result = result * 37 + (topic_name != null ? topic_name.hashCode() : 0);
      result = result * 37 + (topic_id != null ? topic_id.hashCode() : 0);
      result = result * 37 + meetings.hashCode();
      result = result * 37 + instructors.hashCode();
      result = result * 37 + books.hashCode();
      result = result * 37 + metadata.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.course_id = course_id;
    builder.number = number;
    builder.call_number = call_number;
    builder.max = max;
    builder.now = now;
    builder.status = status;
    builder.credits = credits;
    builder.topic_name = topic_name;
    builder.topic_id = topic_id;
    builder.meetings = Internal.copyOf("meetings", meetings);
    builder.instructors = Internal.copyOf("instructors", instructors);
    builder.books = Internal.copyOf("books", books);
    builder.metadata = Internal.copyOf("metadata", metadata);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) {
      builder.append(", id=").append(id);
    }
    if (course_id != null) {
      builder.append(", course_id=").append(course_id);
    }
    if (number != null) {
      builder.append(", number=").append(number);
    }
    if (call_number != null) {
      builder.append(", call_number=").append(call_number);
    }
    if (max != null) {
      builder.append(", max=").append(max);
    }
    if (now != null) {
      builder.append(", now=").append(now);
    }
    if (status != null) {
      builder.append(", status=").append(status);
    }
    if (credits != null) {
      builder.append(", credits=").append(credits);
    }
    if (topic_name != null) {
      builder.append(", topic_name=").append(topic_name);
    }
    if (topic_id != null) {
      builder.append(", topic_id=").append(topic_id);
    }
    if (!meetings.isEmpty()) {
      builder.append(", meetings=").append(meetings);
    }
    if (!instructors.isEmpty()) {
      builder.append(", instructors=").append(instructors);
    }
    if (!books.isEmpty()) {
      builder.append(", books=").append(books);
    }
    if (!metadata.isEmpty()) {
      builder.append(", metadata=").append(metadata);
    }
    return builder.replace(0, 2, "Section{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Section, Builder> {
    public Long id;

    public Long course_id;

    public String number;

    public String call_number;

    public Long max;

    public Long now;

    public String status;

    public String credits;

    public String topic_name;

    public String topic_id;

    public List<Meeting> meetings;

    public List<Instructor> instructors;

    public List<Book> books;

    public List<Metadata> metadata;

    public Builder() {
      meetings = Internal.newMutableList();
      instructors = Internal.newMutableList();
      books = Internal.newMutableList();
      metadata = Internal.newMutableList();
    }

    @Override
    public Section build() {
      return new Section(
          id,
          course_id,
          number,
          call_number,
          max,
          now,
          status,
          credits,
          topic_name,
          topic_id,
          meetings,
          instructors,
          books,
          metadata,
          super.buildUnknownFields()
      );
    }

    public Builder books(List<Book> books) {
      Internal.checkElementsNotNull(books);
      this.books = books;
      return this;
    }

    public Builder call_number(String call_number) {
      this.call_number = call_number;
      return this;
    }

    public Builder course_id(Long course_id) {
      this.course_id = course_id;
      return this;
    }

    public Builder credits(String credits) {
      this.credits = credits;
      return this;
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder instructors(List<Instructor> instructors) {
      Internal.checkElementsNotNull(instructors);
      this.instructors = instructors;
      return this;
    }

    public Builder max(Long max) {
      this.max = max;
      return this;
    }

    public Builder meetings(List<Meeting> meetings) {
      Internal.checkElementsNotNull(meetings);
      this.meetings = meetings;
      return this;
    }

    public Builder metadata(List<Metadata> metadata) {
      Internal.checkElementsNotNull(metadata);
      this.metadata = metadata;
      return this;
    }

    public Builder now(Long now) {
      this.now = now;
      return this;
    }

    public Builder number(String number) {
      this.number = number;
      return this;
    }

    public Builder status(String status) {
      this.status = status;
      return this;
    }

    public Builder topic_id(String topic_id) {
      this.topic_id = topic_id;
      return this;
    }

    public Builder topic_name(String topic_name) {
      this.topic_name = topic_name;
      return this;
    }
  }

  private static final class ProtoAdapter_Section extends ProtoAdapter<Section> {
    ProtoAdapter_Section() {
      super(FieldEncoding.LENGTH_DELIMITED, Section.class);
    }

    @Override
    public Section decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1; ) {
        switch (tag) {
          case 1:
            builder.id(ProtoAdapter.INT64.decode(reader));
            break;
          case 2:
            builder.course_id(ProtoAdapter.INT64.decode(reader));
            break;
          case 3:
            builder.number(ProtoAdapter.STRING.decode(reader));
            break;
          case 4:
            builder.call_number(ProtoAdapter.STRING.decode(reader));
            break;
          case 5:
            builder.max(ProtoAdapter.INT64.decode(reader));
            break;
          case 6:
            builder.now(ProtoAdapter.INT64.decode(reader));
            break;
          case 7:
            builder.status(ProtoAdapter.STRING.decode(reader));
            break;
          case 8:
            builder.credits(ProtoAdapter.STRING.decode(reader));
            break;
          case 9:
            builder.topic_name(ProtoAdapter.STRING.decode(reader));
            break;
          case 10:
            builder.topic_id(ProtoAdapter.STRING.decode(reader));
            break;
          case 11:
            builder.meetings.add(Meeting.ADAPTER.decode(reader));
            break;
          case 12:
            builder.instructors.add(Instructor.ADAPTER.decode(reader));
            break;
          case 13:
            builder.books.add(Book.ADAPTER.decode(reader));
            break;
          case 14:
            builder.metadata.add(Metadata.ADAPTER.decode(reader));
            break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public void encode(ProtoWriter writer, Section value) throws IOException {
      if (value.id != null) {
        ProtoAdapter.INT64.encodeWithTag(writer, 1, value.id);
      }
      if (value.course_id != null) {
        ProtoAdapter.INT64.encodeWithTag(writer, 2, value.course_id);
      }
      if (value.number != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 3, value.number);
      }
      if (value.call_number != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 4, value.call_number);
      }
      if (value.max != null) {
        ProtoAdapter.INT64.encodeWithTag(writer, 5, value.max);
      }
      if (value.now != null) {
        ProtoAdapter.INT64.encodeWithTag(writer, 6, value.now);
      }
      if (value.status != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 7, value.status);
      }
      if (value.credits != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 8, value.credits);
      }
      if (value.topic_name != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 9, value.topic_name);
      }
      if (value.topic_id != null) {
        ProtoAdapter.STRING.encodeWithTag(writer, 10, value.topic_id);
      }
      Meeting.ADAPTER.asRepeated().encodeWithTag(writer, 11, value.meetings);
      Instructor.ADAPTER.asRepeated().encodeWithTag(writer, 12, value.instructors);
      Book.ADAPTER.asRepeated().encodeWithTag(writer, 13, value.books);
      Metadata.ADAPTER.asRepeated().encodeWithTag(writer, 14, value.metadata);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public int encodedSize(Section value) {
      return (value.id != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.course_id != null ? ProtoAdapter.INT64.encodedSizeWithTag(2, value.course_id)
                                     : 0)
          + (value.number != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.number) : 0)
          + (value.call_number != null ? ProtoAdapter.STRING.encodedSizeWithTag(
          4,
          value.call_number
      ) : 0)
          + (value.max != null ? ProtoAdapter.INT64.encodedSizeWithTag(5, value.max) : 0)
          + (value.now != null ? ProtoAdapter.INT64.encodedSizeWithTag(6, value.now) : 0)
          + (value.status != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.status) : 0)
          + (value.credits != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.credits) : 0)
          + (value.topic_name != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.topic_name)
                                      : 0)
          + (value.topic_id != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.topic_id)
                                    : 0)
          + Meeting.ADAPTER.asRepeated().encodedSizeWithTag(11, value.meetings)
          + Instructor.ADAPTER.asRepeated().encodedSizeWithTag(12, value.instructors)
          + Book.ADAPTER.asRepeated().encodedSizeWithTag(13, value.books)
          + Metadata.ADAPTER.asRepeated().encodedSizeWithTag(14, value.metadata)
          + value.unknownFields().size();
    }

    @Override
    public Section redact(Section value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.meetings, Meeting.ADAPTER);
      Internal.redactElements(builder.instructors, Instructor.ADAPTER);
      Internal.redactElements(builder.books, Book.ADAPTER);
      Internal.redactElements(builder.metadata, Metadata.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
