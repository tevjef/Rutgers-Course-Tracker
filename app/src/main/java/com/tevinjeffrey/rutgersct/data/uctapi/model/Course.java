// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: model.proto at 36:1
package com.tevinjeffrey.rutgersct.data.uctapi.model;

import android.os.Parcelable;
import android.support.annotation.Nullable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class Course extends AndroidMessage<Course, Course.Builder> {
  public static final ProtoAdapter<Course> ADAPTER = new ProtoAdapter_Course();

  public static final Parcelable.Creator<Course> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_SUBJECT_ID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_NUMBER = "";

  public static final String DEFAULT_SYNOPSIS = "";

  public static final String DEFAULT_TOPIC_NAME = "";

  public static final String DEFAULT_TOPIC_ID = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  @Nullable
  public final Long subject_id;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String name;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String number;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String synopsis;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String topic_name;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String topic_id;

  @WireField(
      tag = 8,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Section#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Section> sections;

  @WireField(
      tag = 9,
      adapter = "com.tevinjeffrey.rutgersct.data.uctapi.model.Metadata#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Metadata> metadata;

  public Course(@Nullable Long id, @Nullable Long subject_id, @Nullable String name, @Nullable String number, @Nullable String synopsis, @Nullable String topic_name, @Nullable String topic_id, List<Section> sections, List<Metadata> metadata) {
    this(id, subject_id, name, number, synopsis, topic_name, topic_id, sections, metadata, ByteString.EMPTY);
  }

  public Course(@Nullable Long id, @Nullable Long subject_id, @Nullable String name, @Nullable String number, @Nullable String synopsis, @Nullable String topic_name, @Nullable String topic_id, List<Section> sections, List<Metadata> metadata, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.subject_id = subject_id;
    this.name = name;
    this.number = number;
    this.synopsis = synopsis;
    this.topic_name = topic_name;
    this.topic_id = topic_id;
    this.sections = Internal.immutableCopyOf("sections", sections);
    this.metadata = Internal.immutableCopyOf("metadata", metadata);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.subject_id = subject_id;
    builder.name = name;
    builder.number = number;
    builder.synopsis = synopsis;
    builder.topic_name = topic_name;
    builder.topic_id = topic_id;
    builder.sections = Internal.copyOf("sections", sections);
    builder.metadata = Internal.copyOf("metadata", metadata);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Course)) return false;
    Course o = (Course) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(subject_id, o.subject_id)
        && Internal.equals(name, o.name)
        && Internal.equals(number, o.number)
        && Internal.equals(synopsis, o.synopsis)
        && Internal.equals(topic_name, o.topic_name)
        && Internal.equals(topic_id, o.topic_id)
        && sections.equals(o.sections)
        && metadata.equals(o.metadata);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (subject_id != null ? subject_id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (number != null ? number.hashCode() : 0);
      result = result * 37 + (synopsis != null ? synopsis.hashCode() : 0);
      result = result * 37 + (topic_name != null ? topic_name.hashCode() : 0);
      result = result * 37 + (topic_id != null ? topic_id.hashCode() : 0);
      result = result * 37 + sections.hashCode();
      result = result * 37 + metadata.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (subject_id != null) builder.append(", subject_id=").append(subject_id);
    if (name != null) builder.append(", name=").append(name);
    if (number != null) builder.append(", number=").append(number);
    if (synopsis != null) builder.append(", synopsis=").append(synopsis);
    if (topic_name != null) builder.append(", topic_name=").append(topic_name);
    if (topic_id != null) builder.append(", topic_id=").append(topic_id);
    if (!sections.isEmpty()) builder.append(", sections=").append(sections);
    if (!metadata.isEmpty()) builder.append(", metadata=").append(metadata);
    return builder.replace(0, 2, "Course{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Course, Builder> {
    public Long id;

    public Long subject_id;

    public String name;

    public String number;

    public String synopsis;

    public String topic_name;

    public String topic_id;

    public List<Section> sections;

    public List<Metadata> metadata;

    public Builder() {
      sections = Internal.newMutableList();
      metadata = Internal.newMutableList();
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder subject_id(Long subject_id) {
      this.subject_id = subject_id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder number(String number) {
      this.number = number;
      return this;
    }

    public Builder synopsis(String synopsis) {
      this.synopsis = synopsis;
      return this;
    }

    public Builder topic_name(String topic_name) {
      this.topic_name = topic_name;
      return this;
    }

    public Builder topic_id(String topic_id) {
      this.topic_id = topic_id;
      return this;
    }

    public Builder sections(List<Section> sections) {
      Internal.checkElementsNotNull(sections);
      this.sections = sections;
      return this;
    }

    public Builder metadata(List<Metadata> metadata) {
      Internal.checkElementsNotNull(metadata);
      this.metadata = metadata;
      return this;
    }

    @Override
    public Course build() {
      return new Course(id, subject_id, name, number, synopsis, topic_name, topic_id, sections, metadata, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Course extends ProtoAdapter<Course> {
    ProtoAdapter_Course() {
      super(FieldEncoding.LENGTH_DELIMITED, Course.class);
    }

    @Override
    public int encodedSize(Course value) {
      return (value.id != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.subject_id != null ? ProtoAdapter.INT64.encodedSizeWithTag(2, value.subject_id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.name) : 0)
          + (value.number != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.number) : 0)
          + (value.synopsis != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.synopsis) : 0)
          + (value.topic_name != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.topic_name) : 0)
          + (value.topic_id != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.topic_id) : 0)
          + Section.ADAPTER.asRepeated().encodedSizeWithTag(8, value.sections)
          + Metadata.ADAPTER.asRepeated().encodedSizeWithTag(9, value.metadata)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Course value) throws IOException {
      if (value.id != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.id);
      if (value.subject_id != null) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.subject_id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.name);
      if (value.number != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.number);
      if (value.synopsis != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.synopsis);
      if (value.topic_name != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.topic_name);
      if (value.topic_id != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.topic_id);
      Section.ADAPTER.asRepeated().encodeWithTag(writer, 8, value.sections);
      Metadata.ADAPTER.asRepeated().encodeWithTag(writer, 9, value.metadata);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Course decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.subject_id(ProtoAdapter.INT64.decode(reader)); break;
          case 3: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.number(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.synopsis(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.topic_name(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.topic_id(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.sections.add(Section.ADAPTER.decode(reader)); break;
          case 9: builder.metadata.add(Metadata.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Course redact(Course value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.sections, Section.ADAPTER);
      Internal.redactElements(builder.metadata, Metadata.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
